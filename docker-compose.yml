version: '3.7'

services:
    cta-db:
        container_name: cta-db
        restart: always
        image: postgres:14-alpine
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        ports:
            - ${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}
        environment:
            - POSTGRES_SERVER=${POSTGRES_SERVER:-localhost}
            - POSTGRES_PORT=${POSTGRES_PORT:-5432}
            - POSTGRES_USER=${POSTGRES_USER:-postgres}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
            - POSTGRES_DB=${POSTGRES_DB:-postgres}
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U $${POSTGRES_USER:-postgres}"
                ]
            interval: 2s
            timeout: 5s
            retries: 10
        networks:
            - web

    cta-api:
        container_name: cta-api
        build:
            context: .
            dockerfile: docker/client-transactions-api/Dockerfile
            args:
                - WORKDIR=${WORKDIR:-/app}
        depends_on:
            cta-db:
                condition: service_healthy
        ports:
            - ${API_PORT:-8000}:${API_PORT:-8000}
        environment:
            - WORKDIR=${WORKDIR:-/app}
            - API_PORT=${API_PORT:-8000}
            - API_HOST=${API_HOST:-0.0.0.0}
            - TESTING=${TESTING:-False}
            - DEBUG=${DEBUG:-False}
            - LOGGING=${LOGGING:-True}
            - SECRET_KEY=${SECRET_KEY:-pl3seCh@nGeM3!}
            - API_PATH=${API_PATH:-/api}
            - FIRST_SUPERUSER=${FIRST_SUPERUSER:-admin}
            - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD:-password}
            - POSTGRES_USER=${POSTGRES_USER:-postgres}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
            - POSTGRES_SERVER=${POSTGRES_SERVER:-cta-db}
            - POSTGRES_PORT=${POSTGRES_PORT:-5432}
            - POSTGRES_DB=${POSTGRES_DB:-postgres}
            - POOL_INTERVAL=${POOL_INTERVAL:-10}
        networks:
            - web
        entrypoint: ./run.sh

networks:
    web:
        driver: bridge

volumes:
    postgres_data:
